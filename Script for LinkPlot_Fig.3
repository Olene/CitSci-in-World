# Packages

library(readxl)    
library(tidyverse)  
library(igraph)    
library(ggraph)     
library(tidygraph) 

# Open Excel file
file_path <- "CitSci.xlsx"  
df <- read_excel(file_path, sheet = 1)  # Read Excel

View(df)

group_A <- c("Population", "Land Area", "HDI", "Life Expectancy", "Years of schooling", "GNI per capita", "Inbound Tourists", "Endemics", "Species with small occurrence", "Number of total species")  # First group (without internal correlation)
group_B <- c("eBird  Species", "eBird Users", "Occurences from Cornell Lab on GBIF", "Occurences from Observation.org on GBIF","iNat General Observation", "iNat Observers", "iNat Identifiers", "iNat Species")  # Second group (with internal correlation)

# Select Variables
df <- df %>% select(all_of(c(group_A, group_B)))


# Correlation Matrix
get_cor_pval <- function(x, y) {
  test <- cor.test(x, y, method = "pearson")
  tibble(cor = as.numeric(test$estimate), p = test$p.value)
}

cor_results <- var_pairs %>%
  rowwise() %>%
  mutate(
    res = list(get_cor_pval(df[[from]], df[[to]]))
  ) %>%
  unnest(res)

edges_filtered <- cor_results %>%
  filter(!(from %in% group_A & to %in% group_A)) %>%
  filter(abs(cor) >= 0.5, p < 0.05) %>%
  mutate(edge_linetype = ifelse(abs(cor) >= 0.71, "longdash", "solid")) %>%
  rename(weight = cor)


# Create graph
graph <- graph_from_data_frame(edges_filtered, directed = FALSE, vertices = nodes)

# Generate points location
layout_data <- create_layout(graph, layout = "circle")

# Text out 
layout_data <- layout_data %>%
  mutate(x_ext = x * 1.2, y_ext = y * 1.2) 

# Colors
node_colors <- ifelse(V(graph)$name %in% group_A, "blue", "green")

# Generation Linkplot
ggraph(layout_data) +
  geom_edge_link(aes(linetype = edge_linetype), color = "black", edge_width = 3) +  
  geom_node_point(size = 12, color = node_colors) +  
  geom_node_text(aes(x = x_ext, y = y_ext, label = name), 
                 size = 14, fontface = "bold", color = "black") +  
  theme_void() +  
  theme(legend.position = "none") 



